FreeMemory 	"void * lpMemory);"
GetCurrID 	"char * curr_id, char S_or_E);"
GetFlopID 	"char * flop_id, char S_or_E);"
GetKeyID 	"char * key_dev, char * key_id, char S_or_E);"
InitRndm 	"char *key_dev, int window_enable );"
InitKey 	"char *key_dev, char * key_ID);"
ResetKey 	"char * key_ID);"
ResetKeyEx 	"char * key_ID, int flag);"
GetDrvInfo 	"USR_KEYS_INFO *keys_info, P32bit nKeySlots);"
GetDrvInfoEx 	"USR_KEYS_INFO_EX *keys_info, P32bit nKeySlots);"
WipeFile 	"char *file_name);"
SetDevParam 	"char *dev_name, unsigned long flag, unsigned long data_leng, unsigned char *data);"
SignInit 	"char * pathToSecret, char * pathToBase);"
SignDone 	"void);"
SignLogIn 	"char * path);"
SignLogOut 	"void);"
DelSign 	"char * file_name, T8bit count);"
SignFile 	"char * src_file_name,  char * dst_file_name, char * name);"
check_file_sign 	"char * file_name, P8bit count,    Check_Status_Ptr * stat_array);"
SignMem   	"void * block, TLen leng, char * name);"
SignMemEx 	"void * block, TLen *leng, char * name);"
check_mem_sign 	"void * block, TLen leng,    P8bit count, Check_Status_Ptr * stat_array);"
Del_Mem_Sign 	"void * block, PLen leng, T8bit count);"
SignMemSeparate 	"void * block, TLen leng,    TLen sign_block_leng, char * name, void * sign_block);"
SignMemSeparateEx 	"void * block, TLen leng,    PLen sign_block_leng, char * name, void * sign_block);"
SignFileSeparate 	"char * src_file, char * name,    char * sign_file);"
CheckFileSeparate 	"char * file_name, P8bit count,    Check_Status_Ptr *stat_array, char * sign_file);"
CheckMemSeparate 	"void * block, TLen leng,    TLen sign_block_leng, P8bit count,    Check_Status_Ptr *stat_array, void * sign_block);"
HashFile 	"char * file_name, P32bit h_out);"
HashMem 	"void * buff, TLen leng, P32bit h_out);"
check_file_sign_ex 	"char * file_name,        void **open_keys_array, unsigned long open_keys_quantity,        unsigned char *count, Check_Status_Ptr *status_array);"
CheckMemSeparateEx 	"void *ptr, unsigned long leng,    void *sign_block, unsigned long sign_block_leng,    void **open_keys_array, unsigned long open_keys_quantity,    unsigned char *count, Check_Status_Ptr *status_array);"
GetFileSignInfo 	"char *file_name, SIGN_INFO **ID_array,    unsigned long *ID_count);"
GetMemSignInfo 	"void *mem_adr, unsigned long leng,   SIGN_INFO **ID_array, unsigned long *ID_count);"
CryptoInit 	"char * path, char * base_path);"
CryptoDone	"void);"
EnCryptFile 	"char * file_in, char * file_out,   T16bit node_From, P16bit node_To, char * ser);"
DeCryptFile 	"char * file_in, char * file_out,    T16bit abonent);"
GetCryptKeysF 	"char * file_name, P16bit abonents,    P16bit* user_list, char * ser);"
GetCryptKeysM 	"void * block, TLen leng,    P16bit abonents, P16bit* user_list, char * ser);"
DeCryptMem 	"void * buffer, PLen leng, T16bit abonent);"
EnCryptMem 	"void * in_mem_buf, TLen leng,    void * out_mem_buf, T16bit node_From, P16bit node_To, char * ser);"
Rndm 	"void * buff, TLen rnd_size);"
GetFileSenderID 	"char * path, char * sender_id);"
GetMemSenderID 	"void * mem_block, TLen leng,    char * sender_id);"
ImitoMemOnPassword 	"void * buff, TLen leng,    void * password, P32bit imito_out);"
ImitoFileOnPassword 	"char * path, void * password,    P32bit imito_out);"
ImitoFileOnGk 	"char * path, char * my_ID,    P32bit imito_out);"
ImitoMem 	"void * buff, TLen leng, T16bit From, T16bit To,    P32bit imit_out, char * ser);"
ImitoFile 	"char * path, T16bit From, T16bit To,    P32bit imit_out, char * ser);"
EnCryptFileEx 	"char * file_in, char * file_out,    char *From,    void **open_keys_array, T16bit open_keys_quantity,T32bit flags);"
DeCryptFileEx 	"char * file_in, char * file_out,    char *abonent, void *pub_key);"
EnCryptMemEx 	"void * in_mem_buf, PLen leng,    void * out_mem_buf, char *From,    void **open_keys_array, T16bit open_keys_quantity, T32bit flags);"
DeCryptMemEx 	"void * buffer, PLen leng,    char *abonent,void *pub_key);"
GetAlias 	"char * base_dir,char * open_key_ID,    char * Alias);"
GetID 	"char * base_dir, char * Alias,    char * ser, char S_or_E, char * open_key_ID);"
AddOpenKey 	"char * base_dir, void * open_key,    char * my_ID, char S_or_E);"
DelOpenKey 	"char * base_dir,    char * open_key_ID, char * my_ID, char S_or_E);"
CheckOpenKey	"char * base_dir,    char * open_key_ID, char * my_ID,char S_or_E);"
SprList 	"char * base_dir, char * ser,    Spr_List_Ptr *list, P16bit num, char S_or_E);"
DelKeyByNum 	"char * base_dir, char * ser,    T16bit num, char S_or_E);"
DelImitByNum 	"char * base_dir, char * ser,    T16bit num, char * my_ID, char s_or_e);"
CheckKeyByNum 	"char * base_dir, char * ser,    T16bit num, char * my_ID, char S_or_E);"
CheckSpr 	"char * base_dir, char * ser,    Spr_List_Ptr *list, P16bit num, char * my_ID,    char s_or_e);"
SignSpr 	"char * base_dir, char * ser,    char * my_ID, char S_or_E);"
ExtractKey 	"char * base_dir,    char * open_key_ID, void * key);"
Res2Work 	"char * base_dir, char * open_key_ID,    char * my_ID, char S_or_E);"
OpenKeyCompromise	"char * base_dir, char * open_key_ID,                   char S_or_E);"
CheckKeyHash 	"void * open_key,    void * hash_adr);"
CheckOpenKeyBuff	" void *open_key,void *hash,char *key_type);"
CreateHash	"HASHCONTEXT *phHash, const char *alg_id, T32bit dwFlags);"
DestroyHash	"HASHCONTEXT hHash);"
HashData	"HASHCONTEXT hHash, const T8bit  *pbData,                              T32bit dwDataLen,T32bit dwFlags);"
GetHash	"HASHCONTEXT hHash,T8bit  *pbData,                                P32bit dwDataLen,T32bit dwFlags);"
DuplicateHash	" HASHCONTEXT hHash, HASHCONTEXT *phHash,                            T32bit dwFlags);"
SetHash	"HASHCONTEXT hHash,T8bit  *pbData,                                T32bit dwDataLen,T32bit dwFlags);"
SignHash	"HASHCONTEXT hHash, char *key_ID,                           T8bit *pbSignature, T32bit *dwSigLen, T32bit dwFlags);"
VerifySignature	"HASHCONTEXT hHash,                   const T8bit *pbSignature,T32bit dwSigLen,                  void **open_keys_array, T32bit open_keys_quantity,                  Check_Status_Ptr *status_array,P32bit sig_count,                  T32bit dwFlags);"
