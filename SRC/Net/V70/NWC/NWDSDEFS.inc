(******************************************************************************

  %name: nwdsdefs.h %
  %version: 6 %
  %date_modified: Thu Aug 28 14:00:20 1997 %
  $Copyright:

  Copyright (c) 1989-1995 Novell, Inc.  All Rights Reserved.                      

  THIS WORK IS  SUBJECT  TO  U.S.  AND  INTERNATIONAL  COPYRIGHT  LAWS  AND
  TREATIES.   NO  PART  OF  THIS  WORK MAY BE  USED,  PRACTICED,  PERFORMED
  COPIED, DISTRIBUTED, REVISED, MODIFIED, TRANSLATED,  ABRIDGED, CONDENSED,
  EXPANDED,  COLLECTED,  COMPILED,  LINKED,  RECAST, TRANSFORMED OR ADAPTED
  WITHOUT THE PRIOR WRITTEN CONSENT OF NOVELL, INC. ANY USE OR EXPLOITATION
  OF THIS WORK WITHOUT AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO
  CRIMINAL AND CIVIL LIABILITY.$

 *****************************************************************************)

{$IFNDEF  NWDSDEFS_H }
    {$DEFINE NWDSDEFS_H}
    (* * Directory Services NCP verb and subverbs * *)
    {$DEFINE DS_NCP_VERB}
    Const DS_NCP_VERB = 104;
    (* subverbs *)
    {$DEFINE DS_NCP_PING}
    Const DS_NCP_PING = 1;
    {$DEFINE DS_NCP_FRAGMENT}
    Const DS_NCP_FRAGMENT = 2;
    {$DEFINE DS_NCP_FRAGMENT_CLOSE}
    Const DS_NCP_FRAGMENT_CLOSE = 3;
    {$DEFINE DS_NCP_BINDERY_CONTEXT}
    Const DS_NCP_BINDERY_CONTEXT = 4;
    {$DEFINE DS_NCP_MONITOR_CONNECTION}
    Const DS_NCP_MONITOR_CONNECTION = 5;
    {$DEFINE DS_NCP_GET_DS_STATISTICS}
    Const DS_NCP_GET_DS_STATISTICS = 6;
    {$DEFINE DS_NCP_RESET_DS_COUNTERS}
    Const DS_NCP_RESET_DS_COUNTERS = 7;
    {$DEFINE DS_NCP_RELOAD}
    Const DS_NCP_RELOAD = 8;
    {$DEFINE DS_NCP_AUDITING}
    Const DS_NCP_AUDITING = 200;

//* Directory Services PING information FLAGS */
//* ping input flags, these flag are order dependent and alignment dependent */
   {$DEFINE DSPING_SUPPORTED_FIELDS}
   const DSPING_SUPPORTED_FIELDS       = $00000001;
   {$DEFINE DSPING_DEPTH}
   const DSPING_DEPTH                  = $00000002;
   {$DEFINE DSPING_BUILD_NUMBER}
   const DSPING_BUILD_NUMBER           = $00000004;
   {$DEFINE DSPING_FLAGS}
   const DSPING_FLAGS                  = $00000008;
   {$DEFINE DSPING_VERIFICATION_FLAGS}
   const DSPING_VERIFICATION_FLAGS     = $00000010;
   {$DEFINE DSPING_LETTER_VERSION}
   const DSPING_LETTER_VERSION         = $00000020;
   {$DEFINE DSPING_OS_VERSION}
   const DSPING_OS_VERSION             = $00000040;
   {$DEFINE DSPING_TIMESYNC_STATE}
   const DSPING_TIMESYNC_STATE         = $00000080;
   {$DEFINE DSPING_LICENSE_FLAGS}
   const DSPING_LICENSE_FLAGS          = $00000100;
   {$DEFINE DSPING_DS_TIME}
   const DSPING_DS_TIME                = $00000200;

//* String and values that depend on alignment. */
   {$DEFINE DSPING_SAP_NAME}
   const DSPING_SAP_NAME               = $00010000;
   {$DEFINE DSPING_TREE_NAME}
   const DSPING_TREE_NAME              = $00020000;
   {$DEFINE DSPING_OS_NAME}
   const DSPING_OS_NAME                = $00040000;
   {$DEFINE DSPING_HARDWARE_NAME}
   const DSPING_HARDWARE_NAME          = $00080000;
   {$DEFINE DSPING_VENDOR_NAME}
   const DSPING_VENDOR_NAME            = $00100000;

//* ping output flags */
   {$DEFINE DSPONG_ROOT_MOST_MASTER}
   const DSPONG_ROOT_MOST_MASTER       = $0001;
   {$DEFINE DSPONG_TIME_SYNCHRONIZED}
   const DSPONG_TIME_SYNCHRONIZED      = $0002;

//* ping verification flags */
   {$DEFINE DSPING_VERIFICATION_CHECKSUM}
   const DSPING_VERIFICATION_CHECKSUM  = $00000001;
   {$DEFINE DSPING_VERIFICATION_CRC32}
   const DSPING_VERIFICATION_CRC32     = $00000002;

//* ping license flags */
   {$DEFINE DSPING_LICENSE_SCALE}
   const DSPING_LICENSE_SCALE          = $00000001;

    (* * Directory Services Large Packet Verb Numbers *  *)
    {$DEFINE DSV_UNUSED_0}
    Const DSV_UNUSED_0 = 0;
    {$DEFINE DSV_RESOLVE_NAME}
    Const DSV_RESOLVE_NAME = 1;
    {$DEFINE DSV_READ_ENTRY_INFO}
    Const DSV_READ_ENTRY_INFO = 2;
    {$DEFINE DSV_READ}
    Const DSV_READ = 3;
    {$DEFINE DSV_COMPARE}
    Const DSV_COMPARE = 4;
    {$DEFINE DSV_LIST}
    Const DSV_LIST = 5;
    {$DEFINE DSV_SEARCH}
    Const DSV_SEARCH = 6;
    {$DEFINE DSV_ADD_ENTRY}
    Const DSV_ADD_ENTRY = 7;
    {$DEFINE DSV_REMOVE_ENTRY}
    Const DSV_REMOVE_ENTRY = 8;
    {$DEFINE DSV_MODIFY_ENTRY}
    Const DSV_MODIFY_ENTRY = 9;
    {$DEFINE DSV_MODIFY_RDN}
    Const DSV_MODIFY_RDN = 10;
    {$DEFINE DSV_DEFINE_ATTR}
    Const DSV_DEFINE_ATTR = 11;
    {$DEFINE DSV_READ_ATTR_DEF}
    Const DSV_READ_ATTR_DEF = 12;
    {$DEFINE DSV_REMOVE_ATTR_DEF}
    Const DSV_REMOVE_ATTR_DEF = 13;
    {$DEFINE DSV_DEFINE_CLASS}
    Const DSV_DEFINE_CLASS = 14;
    {$DEFINE DSV_READ_CLASS_DEF}
    Const DSV_READ_CLASS_DEF = 15;
    {$DEFINE DSV_MODIFY_CLASS_DEF}
    Const DSV_MODIFY_CLASS_DEF = 16;
    {$DEFINE DSV_REMOVE_CLASS_DEF}
    Const DSV_REMOVE_CLASS_DEF = 17;
    {$DEFINE DSV_LIST_CONTAINABLE_CLASSES}
    Const DSV_LIST_CONTAINABLE_CLASSES = 18;
    {$DEFINE DSV_GET_EFFECTIVE_RIGHTS}
    Const DSV_GET_EFFECTIVE_RIGHTS = 19;
    {$DEFINE DSV_ADD_PARTITION}
    Const DSV_ADD_PARTITION = 20;
    {$DEFINE DSV_REMOVE_PARTITION}
    Const DSV_REMOVE_PARTITION = 21;
    {$DEFINE DSV_LIST_PARTITIONS}
    Const DSV_LIST_PARTITIONS = 22;
    {$DEFINE DSV_SPLIT_PARTITION}
    Const DSV_SPLIT_PARTITION = 23;
    {$DEFINE DSV_JOIN_PARTITIONS}
    Const DSV_JOIN_PARTITIONS = 24;
    {$DEFINE DSV_ADD_REPLICA}
    Const DSV_ADD_REPLICA = 25;
    {$DEFINE DSV_REMOVE_REPLICA}
    Const DSV_REMOVE_REPLICA = 26;
    {$DEFINE DSV_OPEN_STREAM}
    Const DSV_OPEN_STREAM = 27;
    {$DEFINE DSV_SEARCH_FILTER}
    Const DSV_SEARCH_FILTER = 28;
    {$DEFINE DSV_CHANGE_REPLICA_TYPE}
    Const DSV_CHANGE_REPLICA_TYPE = 31;
    {$DEFINE DSV_UPDATE_REPLICA}
    Const DSV_UPDATE_REPLICA = 37;
    {$DEFINE DSV_SYNC_PARTITION}
    Const DSV_SYNC_PARTITION = 38;
    {$DEFINE DSV_SYNC_SCHEMA}
    Const DSV_SYNC_SCHEMA = 39;
    {$DEFINE DSV_READ_SYNTAXES}
    Const DSV_READ_SYNTAXES = 40;
    {$DEFINE DSV_GET_REPLICA_ROOT_ID}
    Const DSV_GET_REPLICA_ROOT_ID = 41;
    {$DEFINE DSV_BEGIN_MOVE_ENTRY}
    Const DSV_BEGIN_MOVE_ENTRY = 42;
    {$DEFINE DSV_FINISH_MOVE_ENTRY}
    Const DSV_FINISH_MOVE_ENTRY = 43;
    {$DEFINE DSV_RELEASE_MOVED_ENTRY}
    Const DSV_RELEASE_MOVED_ENTRY = 44;
    {$DEFINE DSV_BACKUP_ENTRY}
    Const DSV_BACKUP_ENTRY = 45;
    {$DEFINE DSV_RESTORE_ENTRY}
    Const DSV_RESTORE_ENTRY = 46;
    {$DEFINE DSV_CLOSE_ITERATION}
    Const DSV_CLOSE_ITERATION = 50;
    {$DEFINE DSV_GET_SERVER_ADDRESS}
    Const DSV_GET_SERVER_ADDRESS = 53;
    {$DEFINE DSV_SET_KEYS}
    Const DSV_SET_KEYS = 54;
    {$DEFINE DSV_CHANGE_PASSWORD}
    Const DSV_CHANGE_PASSWORD = 55;
    {$DEFINE DSV_VERIFY_PASSWORD}
    Const DSV_VERIFY_PASSWORD = 56;
    {$DEFINE DSV_BEGIN_LOGIN}
    Const DSV_BEGIN_LOGIN = 57;
    {$DEFINE DSV_FINISH_LOGIN}
    Const DSV_FINISH_LOGIN = 58;
    {$DEFINE DSV_BEGIN_AUTHENTICATION}
    Const DSV_BEGIN_AUTHENTICATION = 59;
    {$DEFINE DSV_FINISH_AUTHENTICATION}
    Const DSV_FINISH_AUTHENTICATION = 60;
    {$DEFINE DSV_LOGOUT}
    Const DSV_LOGOUT = 61;
    {$DEFINE DSV_REPAIR_RING}
    Const DSV_REPAIR_RING = 62;
    {$DEFINE DSV_REPAIR_TIMESTAMPS}
    Const DSV_REPAIR_TIMESTAMPS = 63;
    {$DEFINE DSV_DESIGNATE_NEW_MASTER}
    Const DSV_DESIGNATE_NEW_MASTER = 69;
    {$DEFINE DSV_CHECK_LOGIN_RESTRICTIONS}
    Const DSV_CHECK_LOGIN_RESTRICTIONS = 72;
    {$DEFINE DSV_ABORT_PARTITION_OPERATION}
    Const DSV_ABORT_PARTITION_OPERATION = 76;
    {$DEFINE DSV_READ_REFERENCES}
    Const DSV_READ_REFERENCES = 79;
    {$DEFINE DSV_INSPECT_ENTRY}
    Const DSV_INSPECT_ENTRY = 80;
    (* maximum number of characters in names, not including terminator *)
    {$DEFINE MAX_RDN_CHARS}
    Const MAX_RDN_CHARS = 128;
    {$DEFINE MAX_DN_CHARS}
    Const MAX_DN_CHARS = 256;
    {$DEFINE MAX_SCHEMA_NAME_CHARS}
    Const MAX_SCHEMA_NAME_CHARS = 32;
    {$DEFINE MAX_TREE_NAME_CHARS}
    Const MAX_TREE_NAME_CHARS = 32;
    {$DEFINE MAX_SAP_NAME_CHARS}
    Const MAX_SAP_NAME_CHARS = 47;
    (* maximum size of names, including terminator *)
     MAX_RDN_BYTES =( 2 * ( MAX_RDN_CHARS + 1 ) );
     MAX_DN_BYTES =( 2 * ( MAX_DN_CHARS + 1 ) );
     MAX_SCHEMA_NAME_BYTES =( 2 * ( MAX_SCHEMA_NAME_CHARS + 1 ) );
    {$DEFINE MAX_ASN1_NAME}
    Const MAX_ASN1_NAME = 32;
     MAX_VALUE =( 63 * 1024 );
    {$DEFINE MAX_MESSAGE}
    Const MAX_MESSAGE = $00010000;
    {$DEFINE NO_MORE_ITERATIONS}
    Const NO_MORE_ITERATIONS : nint32= $ffffffff;
    (* delimiters in names *)
    {$DEFINE DELIM_VALUE}
    Const DELIM_VALUE = '=';
    {$DEFINE DELIM_DV}
    Const DELIM_DV = '+';
    {$DEFINE DELIM_RDN}
    Const DELIM_RDN = '.';
    {$DEFINE ESCAPE_CHAR}
    Const ESCAPE_CHAR = '\\';
    (* special entry names in ACLs *)
    {$DEFINE DS_ROOT_NAME}
    Const DS_ROOT_NAME = '[Root]';
    {$DEFINE DS_PUBLIC_NAME}
    Const DS_PUBLIC_NAME = '[Public]';
    {$DEFINE DS_MASK_NAME}
    Const DS_MASK_NAME = '[Inheritance Mask]';
    {$DEFINE DS_CREATOR_NAME}
    Const DS_CREATOR_NAME = '[Creator]';
    {$DEFINE DS_SELF_NAME}
    Const DS_SELF_NAME = '[Self]';
    (* special attribute names in ACLs *)
    {$DEFINE DS_ALL_ATTRS_NAME}
    Const DS_ALL_ATTRS_NAME = '[All Attributes Rights]';
    {$DEFINE DS_SMS_RIGHTS_NAME}
    Const DS_SMS_RIGHTS_NAME = '[SMS Rights]';
    {$DEFINE DS_ENTRY_RIGHTS_NAME}
    Const DS_ENTRY_RIGHTS_NAME = '[Entry Rights]';
    Const
    SYN_UNKNOWN = 0;
    SYN_DIST_NAME = 1;
    SYN_CE_STRING = 2;
    SYN_CI_STRING = 3;
    SYN_PR_STRING = 4;
    SYN_NU_STRING = 5;
    SYN_CI_LIST = 6;
    SYN_BOOLEAN = 7;
    SYN_INTEGER = 8;
    SYN_OCTET_STRING = 9;
    SYN_TEL_NUMBER = 10;
    SYN_FAX_NUMBER = 11;
    SYN_NET_ADDRESS = 12;
    SYN_OCTET_LIST = 13;
    SYN_EMAIL_ADDRESS = 14;
    SYN_PATH = 15;
    SYN_REPLICA_POINTER = 16;
    SYN_OBJECT_ACL = 17;
    SYN_PO_ADDRESS = 18;
    SYN_TIMESTAMP = 19;
    SYN_CLASS_NAME = 20;
    SYN_STREAM = 21;
    SYN_COUNTER = 22;
    SYN_BACK_LINK = 23;
    SYN_TIME = 24;
    SYN_TYPED_NAME = 25;
    SYN_HOLD = 26;
    SYN_INTERVAL = 27;
    SYN_COMPONENT = 28;
    SYN_ENUM_COMPONENT = 29;
    SYN_NULL = 30;
    SYN_OID = 31;
    SYN_ENUMERATED = 32;
    SYN_SET = 33;
    SYN_SEQUENCE = 34;
    SYN_CHOICE = 35;
    SYN_ANY = 36;
    SYNTAX_COUNT = 37;
    Type SYNTAX = 0..37;
    Const
    DS_DOS = 0;
    DS_MACINTOSH = 1;
    DS_UNIX = 2;
    DS_FTAM = 3;
    DS_OS2 = 4;
    Type NAME_SPACE_TYPE = 0..4;
    Const
    RT_MASTER = 0;
    RT_SECONDARY = 1;
    RT_READONLY = 2;
    RT_SUBREF = 3;
    RT_COUNT = 4;
    Type REPLICA_TYPE = 0..4;
    Const
    RS_ON = 0;
    RS_NEW_REPLICA = 1;
    RS_DYING_REPLICA = 2;
    RS_LOCKED = 3;
    RS_CRT_0 = 4;
    RS_CRT_1 = 5;
    RS_TRANSITION_ON = 6;
    RS_TRANSITION_MOVE = 7;
    RS_TRANSITION_SPLIT = 8;
    RS_SS_0 = 48;
    RS_SS_1 = 49;
    RS_JS_0 = 64;
    RS_JS_1 = 65;
    RS_JS_2 = 66;
    RS_MS_0 = 80;
    RS_MS_1 = 81;
    RS_MS_2 = 82;
    RS_COUNT = 83;
    Type REPLICA_STATE = 0..83;
    (* TC #define GET_REPLICA_TYPE ( rpt ) ( ( rpt ) & 0x0000FFFF )  *)
    (* TC #define GET_REPLICA_STATE ( rpt ) ( ( rpt ) > > 16 )  *)
    (* typedef enum NET_ADDRESS_TYPE                                                   *)
    (* {                                                                               *)
    (*   NT_IPX, NT_IP, NT_SDLC, NT_TOKENRING_ETHERNET, NT_OSI, NT_APPLETALK, NT_COUNT *)
    (* } NET_ADDRESS_TYPE;                                                             *)
    Const
    NT_IPX = 0;
    NT_IP = 1;
    NT_SDLC = 2;
    NT_TOKENRING_ETHERNET = 3;
    NT_OSI = 4;
    NT_APPLETALK = 5;
    NT_NETBEUI = 6;
    NT_SOCKADDR = 7;
    NT_UDP = 8;
    NT_TCP = 9;
    NT_UDP6 = 10;
    NT_TCP6 = 11;
    NT_COUNT = 12;
    Type NET_ADDRESS_TYPE = 0..12;
    Const
    DS_UNKNOWN = 0;
    DS_DOWN = 1;
    DS_UP = 2;
    Type NCP_SERVER_STATUS = 0..2;
    {$DEFINE IPX_ADDRESS_LEN}
    Const IPX_ADDRESS_LEN = 12;
    (*Entry flag definitions used by DSV_LIST, DSV_READ_ENTRY_INFO, DSV_SEARCH. *)
    {$DEFINE DS_ALIAS_ENTRY}
    Const DS_ALIAS_ENTRY = $0001;
    {$DEFINE DS_PARTITION_ROOT}
    Const DS_PARTITION_ROOT = $0002;
    {$DEFINE DS_CONTAINER_ENTRY}
    Const DS_CONTAINER_ENTRY = $0004;
    {$DEFINE DS_CONTAINER_ALIAS}
    Const DS_CONTAINER_ALIAS = $0008;
    {$DEFINE DS_MATCHES_LIST_FILTER}
    Const DS_MATCHES_LIST_FILTER = $0010;
    (* * definitions used by DSV_MODIFY_ENTRY * *)
    {$DEFINE DS_ADD_ATTRIBUTE}
    Const DS_ADD_ATTRIBUTE = $00;
    {$DEFINE DS_REMOVE_ATTRIBUTE}
    Const DS_REMOVE_ATTRIBUTE = $01;
    {$DEFINE DS_ADD_VALUE}
    Const DS_ADD_VALUE = $02;
    {$DEFINE DS_REMOVE_VALUE}
    Const DS_REMOVE_VALUE = $03;
    {$DEFINE DS_ADDITIONAL_VALUE}
    Const DS_ADDITIONAL_VALUE = $04;
    {$DEFINE DS_OVERWRITE_VALUE}
    Const DS_OVERWRITE_VALUE = $05;
    {$DEFINE DS_CLEAR_ATTRIBUTE}
    Const DS_CLEAR_ATTRIBUTE = $06;
    {$DEFINE DS_CLEAR_VALUE}
    Const DS_CLEAR_VALUE = $07;
    (* * definitions used by DSV_READ, DSV_SEARCH * *)
    {$DEFINE DS_ATTRIBUTE_NAMES}
    Const DS_ATTRIBUTE_NAMES = $00;
    {$DEFINE DS_ATTRIBUTE_VALUES}
    Const DS_ATTRIBUTE_VALUES = $01;
    {$DEFINE DS_EFFECTIVE_PRIVILEGES}
    Const DS_EFFECTIVE_PRIVILEGES = $02;
    {$DEFINE DS_VALUE_INFO}
    Const DS_VALUE_INFO = $03;
    {$DEFINE DS_ABBREVIATED_VALUE}
    Const DS_ABBREVIATED_VALUE = $04;
    (* * definitions used by DSV_READ for value flags * *)
    {$DEFINE DS_NAMING}
    Const DS_NAMING = $0001;
    {$DEFINE DS_BASECLASS}
    Const DS_BASECLASS = $0002;
    {$DEFINE DS_PRESENT}
    Const DS_PRESENT = $0004;
    (* * definitions used by DSV_READ_ATTR_DEF * *)
    {$DEFINE DS_SINGLE_VALUED_ATTR}
    Const DS_SINGLE_VALUED_ATTR = $0001;
    {$DEFINE DS_SIZED_ATTR}
    Const DS_SIZED_ATTR = $0002;
    {$DEFINE DS_NONREMOVABLE_ATTR}
    Const DS_NONREMOVABLE_ATTR = $0004;
    {$DEFINE DS_READ_ONLY_ATTR}
    Const DS_READ_ONLY_ATTR = $0008;
    {$DEFINE DS_HIDDEN_ATTR}
    Const DS_HIDDEN_ATTR = $0010;
    {$DEFINE DS_STRING_ATTR}
    Const DS_STRING_ATTR = $0020;
    {$DEFINE DS_SYNC_IMMEDIATE}
    Const DS_SYNC_IMMEDIATE = $0040;
    {$DEFINE DS_PUBLIC_READ}
    Const DS_PUBLIC_READ = $0080;
    {$DEFINE DS_SERVER_READ}
    Const DS_SERVER_READ = $0100;
    {$DEFINE DS_WRITE_MANAGED}
    Const DS_WRITE_MANAGED = $0200;
    {$DEFINE DS_PER_REPLICA}
    Const DS_PER_REPLICA = $0400;
    {$DEFINE DS_ATTR_DEF_NAMES}
    Const DS_ATTR_DEF_NAMES = 0;
    {$DEFINE DS_ATTR_DEFS}
    Const DS_ATTR_DEFS = 1;
    (* * definitions used by DSV_DEFINE_CLASS and DSV_READ_CLASS_DEF * *)
    {$DEFINE DS_CONTAINER_CLASS}
    Const DS_CONTAINER_CLASS = $01;
    {$DEFINE DS_EFFECTIVE_CLASS}
    Const DS_EFFECTIVE_CLASS = $02;
    {$DEFINE DS_NONREMOVABLE_CLASS}
    Const DS_NONREMOVABLE_CLASS = $04;
    {$DEFINE DS_AMBIGUOUS_NAMING}
    Const DS_AMBIGUOUS_NAMING = $08;
    {$DEFINE DS_AMBIGUOUS_CONTAINMENT}
    Const DS_AMBIGUOUS_CONTAINMENT = $10;
    {$DEFINE DS_CLASS_DEF_NAMES}
    Const DS_CLASS_DEF_NAMES = 0;
    {$DEFINE DS_CLASS_DEFS}
    Const DS_CLASS_DEFS = 1;
    {$DEFINE DS_EXPANDED_CLASS_DEFS}
    Const DS_EXPANDED_CLASS_DEFS = 2;
    {$DEFINE DS_INFO_CLASS_DEFS}
    Const DS_INFO_CLASS_DEFS = 3;
    {$DEFINE DS_FULL_CLASS_DEFS}
    Const DS_FULL_CLASS_DEFS = 4;
    (* * definitions used by DSV_SEARCH * *)
    {$DEFINE DS_SEARCH_ENTRY}
    Const DS_SEARCH_ENTRY = 0;
    {$DEFINE DS_SEARCH_SUBORDINATES}
    Const DS_SEARCH_SUBORDINATES = 1;
    {$DEFINE DS_SEARCH_SUBTREE}
    Const DS_SEARCH_SUBTREE = 2;
    {$DEFINE DS_ALIAS_REFERRAL}
    Const DS_ALIAS_REFERRAL = 0;
    {$DEFINE DS_PARTITION_REFERRAL}
    Const DS_PARTITION_REFERRAL = 1;
    {$DEFINE DS_SEARCH_ITEM}
    Const DS_SEARCH_ITEM = 0;
    {$DEFINE DS_SEARCH_OR}
    Const DS_SEARCH_OR = 1;
    {$DEFINE DS_SEARCH_AND}
    Const DS_SEARCH_AND = 2;
    {$DEFINE DS_SEARCH_NOT}
    Const DS_SEARCH_NOT = 3;
    {$DEFINE DS_SEARCH_EQUAL}
    Const DS_SEARCH_EQUAL = 7;
    {$DEFINE DS_SEARCH_GREATER_OR_EQUAL}
    Const DS_SEARCH_GREATER_OR_EQUAL = 8;
    {$DEFINE DS_SEARCH_LESS_OR_EQUAL}
    Const DS_SEARCH_LESS_OR_EQUAL = 9;
    {$DEFINE DS_SEARCH_APPROX}
    Const DS_SEARCH_APPROX = 10;
    {$DEFINE DS_SEARCH_PRESENT}
    Const DS_SEARCH_PRESENT = 15;
    {$DEFINE DS_SEARCH_RDN}
    Const DS_SEARCH_RDN = 16;
    {$DEFINE DS_SEARCH_BASE_CLASS}
    Const DS_SEARCH_BASE_CLASS = 17;
    {$DEFINE DS_SEARCH_MODIFICATION_GE}
    Const DS_SEARCH_MODIFICATION_GE = 18;
    {$DEFINE DS_SEARCH_VALUE_TIME_GE}
    Const DS_SEARCH_VALUE_TIME_GE = 19;
    {$DEFINE DS_SEARCH_REFERENCES}
    Const DS_SEARCH_REFERENCES = 20;
    (* * definitions used by Access Control * *)
    {$DEFINE DS_ENTRY_BROWSE}
    Const DS_ENTRY_BROWSE = $00000001;
    {$DEFINE DS_ENTRY_ADD}
    Const DS_ENTRY_ADD = $00000002;
    {$DEFINE DS_ENTRY_DELETE}
    Const DS_ENTRY_DELETE = $00000004;
    {$DEFINE DS_ENTRY_RENAME}
    Const DS_ENTRY_RENAME = $00000008;
    {$DEFINE DS_ENTRY_SUPERVISOR}
    Const DS_ENTRY_SUPERVISOR = $00000010;
     DS_ENTRY_MASK = ( DS_ENTRY_BROWSE OR DS_ENTRY_ADD OR DS_ENTRY_DELETE OR DS_ENTRY_RENAME OR DS_ENTRY_SUPERVISOR );
    {$DEFINE DS_ATTR_COMPARE}
    Const DS_ATTR_COMPARE = $00000001;
    {$DEFINE DS_ATTR_READ}
    Const DS_ATTR_READ = $00000002;
    {$DEFINE DS_ATTR_WRITE}
    Const DS_ATTR_WRITE = $00000004;
    {$DEFINE DS_ATTR_SELF}
    Const DS_ATTR_SELF = $00000008;
    {$DEFINE DS_ATTR_SUPERVISOR}
    Const DS_ATTR_SUPERVISOR = $00000020;
     DS_ATTR_MASK =( DS_ATTR_COMPARE OR DS_ATTR_READ OR DS_ATTR_WRITE OR DS_ATTR_SELF OR DS_ATTR_SUPERVISOR );
    {$DEFINE DS_READ_STREAM}
    Const DS_READ_STREAM = $00000001;
    {$DEFINE DS_WRITE_STREAM}
    Const DS_WRITE_STREAM = $00000002;
    {$DEFINE SF_DO_IMMEDIATE}
    Const SF_DO_IMMEDIATE = $00000001;
    {$DEFINE SF_TRANSITION}
    Const SF_TRANSITION = $00000002;
    {$DEFINE SF_SEND_ALL}
    Const SF_SEND_ALL = $00000004;

    (* Password Sync flags *)
    {$DEFINE NDS_PASSWORD}
    const NDS_PASSWORD     = $00000001;
    {$DEFINE NT_PASSWORD}
    const NT_PASSWORD      = $00000002;

{$ENDIF}

