(*
//ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
//บ Copyright (c) Unpublished Work of Novell, Inc.  All rights reserved.     บ
//บ                                                                          บ
//บ THIS WORK IS AN UNPUBLISHED WORK AND CONTAINS CONFIDENTIAL, PROPRIETARY  บ
//บ AND TRADE SECRET INFORMATION OF NOVELL, INC.                             บ
//บ                                                                          บ
//บ ACCESS TO THIS WORK IS RESTRICTED TO (I) NOVELL EMPLOYEES WHO HAVE A     บ
//บ NEED TO KNOW HOW TO PERFORM TASKS WITHIN THE SCOPE OF THEIR ASSIGNMENTS  บ
//บ AND (II) ENTITIES OTHER THAN NOVELL, INC. WHO HAVE ENTERED INTO          บ
//บ APPROPRIATE LICENSE AGREEMENTS.                                          บ
//บ                                                                          บ
//บ NO PART OF THIS WORK MAY BE USED, PRACTICED, PERFORMED, COPIED,          บ
//บ DISTRIBUTED, REVISED, MODIFIED, TRANSLATED, ABRIDGED, CONDENSED,         บ
//บ EXPANDED, COLLECTED, COMPILED, LINKED, RECAST, TRANSFORMED OR ADAPTED    บ
//บ WITHOUT THE PRIOR WRITTEN CONSENT OF NOVELL, INC.                        บ
//บ                                                                          บ
//บ ANY USE OR EXPLOITATION OF THIS WORK WITHOUT AUTHORIZATION COULD SUBJECT บ
//บ THE PERPETRATOR TO CRIMINAL AND CIVIL LIABILITY.                         บ
//ฬออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออน
//บ Source module name: PSMOID.OGH                                           บ
//บ This PROGRAM file was generated by 'OIDDBGEN /O.'                        บ
//บ !!! DO NOT MODIFY !!!                                                    บ
//ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ
*)

(* Inclusion Control *)

{$IFNDEF  PSMOID_OGH }
    {$DEFINE PSMOID_OGH}
    (* Global Variables *)
    {$IFDEF  PSMSPR_C }
        (* TC  OID_t idValStateReadyGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x00 , 0x01 };  *)
        (* TC  OID_t idValStateOnRequestGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x00 , 0x02 };  *)
        (* TC  OID_t idValStateInitializingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x00 , 0x06 };  *)
        (* TC  OID_t idValStateTerminatingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x00 , 0x07 };  *)
        (* TC  OID_t idValJobStateUnknownGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x00 };  *)
        (* TC  OID_t idValJobStatePreProcessingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x01 };  *)
        (* TC  OID_t idValJobStatePendingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x04 };  *)
        (* TC  OID_t idValJobStateProcessingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x05 };  *)
        (* TC  OID_t idValJobStateInterruptedGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x06 };  *)
        (* TC  OID_t idValJobStateRetainedGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x09 };  *)
        (* TC  OID_t idValJobStateHeldGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x0A };  *)
        (* TC  OID_t idValJobStatePausedGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x0B };  *)
        (* TC  OID_t idValJobStateTerminatingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x0C };  *)
        (* TC  OID_t idValJobStateCancelledGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x0E };  *)
        (* TC  OID_t idValJobStateCompletedGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x12 , 0x0F };  *)
        (* TC  OID_t idValReasonsDocumentsNeededGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x01 };  *)
        (* TC  OID_t idValReasonsJobHoldSetGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x02 };  *)
        (* TC  OID_t idValResnJobPrtAftrSpecdGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x03 };  *)
        (* TC  OID_t idValResnReqdResNotReadyGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x04 };  *)
        (* TC  OID_t idValResnSuccessCompleteGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x05 };  *)
        (* TC  OID_t idValResnCancelByUserGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x08 };  *)
        (* TC  OID_t idValResnCancelByOperGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x09 };  *)
        (* TC  OID_t idValResnAbortBySysGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x13 , 0x0A };  *)
        (* TC  OID_t idValDocStateXferPendingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x17 , 0x00 };  *)
        (* TC  OID_t idValDocStatePendingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x17 , 0x01 };  *)
        (* TC  OID_t idValDocStateProcessingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x17 , 0x02 };  *)
        (* TC  OID_t idValDocStateCompletedGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x17 , 0x03 };  *)
        (* TC  OID_t idValDocStatePrintingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x17 , 0x04 };  *)
        (* TC  OID_t idValPstateUnknownGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x00 };  *)
        (* TC  OID_t idValPstateIdleGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x01 };  *)
        (* TC  OID_t idValPstatePrintingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x02 };  *)
        (* TC  OID_t idValPstateNeedsAttentionGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x03 };  *)
        (* TC  OID_t idValPstatePausedGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x04 };  *)
        (* TC  OID_t idValPstateShutdownGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x05 };  *)
        (* TC  OID_t idValPstateJobStartWaitGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x06 };  *)
        (* TC  OID_t idValPstateJobEndWaitGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x07 };  *)
        (* TC  OID_t idValPstateNeedsKeyOperGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x08 };  *)
        (* TC  OID_t idValPstateJobPasswWaitGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x09 };  *)
        (* TC  OID_t idValPstateTimedOutGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x0A };  *)
        (* TC  OID_t idValPstateConnectingGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x1E , 0x0B };  *)
        (* TC  OID_t idValMediumIsoA4WhiteGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x00 };  *)
        (* TC  OID_t idValMediumIsoA4TransprntGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x02 };  *)
        (* TC  OID_t idValMediumNaLetterWhiteGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x32 };  *)
        (* TC  OID_t idValMediumNaLetrTransprntGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x34 };  *)
        (* TC  OID_t idValMediumNaLegalWhiteGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x3C };  *)
        (* TC  OID_t idValMediumTypeStationeryGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x00 };  *)
        (* TC  OID_t idValMediumTypeTransparencyGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x01 };  *)
        (* TC  OID_t idValMediumTypeEnvelopeGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x02 };  *)
        (* TC  OID_t idValMediumTypeEnvPlainGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x03 };  *)
        (* TC  OID_t idValMediumTypeContLongGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x04 };  *)
        (* TC  OID_t idValMediumTypeContShortGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x05 };  *)
        (* TC  OID_t idValMediumTypeTabStockGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x06 };  *)
        (* TC  OID_t idValMediumTypeMultpartFrmGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x07 };  *)
        (* TC  OID_t idValMediumTypeLabelsGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x08 };  *)
        (* TC  OID_t idValMediumTypeEnvWindowGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x09 };  *)
        (* TC  OID_t idValMediumTypeMultiLayerGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x34 , 0x0A };  *)
        (* TC  OID_t idValMediumSizeNaLetterGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x35 , 0x00 };  *)
        (* TC  OID_t idValMediumSizeNaLegalGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x35 , 0x01 };  *)
        (* TC  OID_t idValMediumSizeNaNum10EnvGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x35 , 0x04 };  *)
        (* TC  OID_t idValMediumSizeIsoA4Gbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x35 , 0x18 };  *)
        (* TC  OID_t idValMediumColorWhiteGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x36 , 0x00 };  *)
        (* TC  OID_t idValMediumColorClearGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x36 , 0x07 };  *)
        (* TC  OID_t idValXferMethodWithRequestGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x4B , 0x00 };  *)
        (* TC  OID_t idValXferMethodRefDataGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x4B , 0x01 };  *)
        (* TC  OID_t idValXferMethodFtamByClntGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x4B , 0x02 };  *)
        (* TC  OID_t idValXferMethodFtamBySrvrGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x4B , 0x03 };  *)
        (* TC  OID_t idValXferMethodTypeImmedGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x4C , 0x02 };  *)
        (* TC  OID_t idValSchedulerFifoGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x69 , 0x00 };  *)
        (* TC  OID_t idValSchedulerShortJob1stGbl [ ] =  *)
        (* TC  { 0x06 , 0x09 , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x69 , 0x01 };  *)
        (* TC  OID_t idValMediumNaNum10EnvelopeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0A , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x81 , 0x0F };  *)
        (* TC  OID_t idValMediumNaNum9EnvelopeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0A , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x81 , 0x13 };  *)
        (* TC  OID_t idValMediumDefaultGbl [ ] =  *)
        (* TC  { 0x06 , 0x0A , 0x28 , 0xCF , 0x3F , 0x01 , 0x00 , 0x00 , 0x06 , 0x32 , 0x87 , 0x68 };  *)
        (* TC  OID_t ndpsOCGenericGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsOCJobGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 };  *)
        (* TC  OID_t ndpsOCPrinterGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 };  *)
        (* TC  OID_t ndpsOCMediumGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 };  *)
        (* TC  OID_t ndpsOCFontGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x04 };  *)
        (* TC  OID_t ndpsOCTransferMethodGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x05 };  *)
        (* TC  OID_t ndpsOCDeliveryMethodGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x06 };  *)
        (* TC  OID_t ndpsOCAuxiliarySheetGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x07 };  *)
        (* TC  OID_t ndpsOCFinishingGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x08 };  *)
        (* TC  OID_t ndpsOCOutputMethodGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x09 };  *)
        (* TC  OID_t ndpsOCImpositionGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0A };  *)
        (* TC  OID_t ndpsOCSchedulerGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0B };  *)
        (* TC  OID_t ndpsOCDocumentGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C };  *)
        (* TC  OID_t ndpsOCResourceGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0D };  *)
        (* TC  OID_t ndpsOCInputGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0E };  *)
        (* TC  OID_t ndpsOCOutputGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0F };  *)
        (* TC  OID_t ndpsOCAuxiliarySheetPackageGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x10 };  *)
        (* TC  OID_t ndpsOCJobDefaultsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x11 };  *)
        (* TC  OID_t ndpsOCPrinterLimitsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x12 };  *)
        (* TC  OID_t ndpsOCManagerGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x13 };  *)
        (* TC  OID_t ndpsOCErrorGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x14 };  *)
        (* TC  OID_t ndpsOCWarningGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x15 };  *)
        (* TC  OID_t ndpsOCReportGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x16 };  *)
        (* TC  OID_t ndpsOCRetainedJobGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x17 };  *)
        (* TC  OID_t ndpsOCDocDefaultsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x18 };  *)
        (* TC  OID_t ndpsOCMediaPathGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x19 };  *)
        (* TC  OID_t ndpsOCChannelGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1A };  *)
        (* TC  OID_t ndpsOCInterpreterGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1B };  *)
        (* TC  OID_t ndpsOCAlertCodesGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C };  *)
        (* TC  OID_t ndpsVcPrinterStateGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x00 };  *)
        (* TC  OID_t ndpsVcTransferMethodGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x01 };  *)
        (* TC  OID_t ndpsVcSchedulerGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x02 };  *)
        (* TC  OID_t ndpsVcDistNameSyntaxGbl [ ] =  *)
        (* TC  { 0x06 , 0x0B , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x03 };  *)
        (* TC  OID_t ndpsValPstateDisabledGbl [ ] =  *)
        (* TC  { 0x06 , 0x0C , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsValPstateSuspendedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0C , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x00 , 0x01 };  *)
        (* TC  OID_t ndpsValPstateActiveGbl [ ] =  *)
        (* TC  { 0x06 , 0x0C , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x00 , 0x02 };  *)
        (* TC  OID_t ndpsValXferMethodNdpsDataGbl [ ] =  *)
        (* TC  { 0x06 , 0x0C , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x01 , 0x00 };  *)
        (* TC  OID_t ndpsValSchedulerMediaGbl [ ] =  *)
        (* TC  { 0x06 , 0x0C , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsValDnSyntaxNdsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0C , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x01 , 0x03 , 0x00 };  *)
        (* TC  OID_t ndpsAttDescriptorGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x00 , 0x00 , 0x01 };  *)
        (* TC  OID_t ndpsAttNotificationProfileGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x00 , 0x00 , 0x0A };  *)
        (* TC  OID_t ndpsAttJobIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttJobNameGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x01 };  *)
        (* TC  OID_t ndpsAttJobOriginatorGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x02 };  *)
        (* TC  OID_t ndpsAttJobOwnerGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x03 };  *)
        (* TC  OID_t ndpsAttJobNonComplsryAttrsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x08 };  *)
        (* TC  OID_t ndpsAttJobHoldGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x20 };  *)
        (* TC  OID_t ndpsAttJobPrintAfterGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x22 };  *)
        (* TC  OID_t ndpsAttJobPriorityGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x23 };  *)
        (* TC  OID_t ndpsAttJobDeadlineTimeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x24 };  *)
        (* TC  OID_t ndpsAttJobDiscardTimeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x25 };  *)
        (* TC  OID_t ndpsAttJobRetentionPeriodGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x26 };  *)
        (* TC  OID_t ndpsAttJobNotifyProfileIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttJobFfReqdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x02 , 0x01 };  *)
        (* TC  OID_t ndpsAttJobBannerReqdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x02 , 0x02 };  *)
        (* TC  OID_t ndpsAttJobBannerResGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x02 , 0x03 };  *)
        (* TC  OID_t ndpsAttJobOperatorHoldGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x02 , 0x04 };  *)
        (* TC  OID_t ndpsAttPrinterNameGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttPrinterStateGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x00 , 0x08 };  *)
        (* TC  OID_t ndpsAttMediaSupportedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x00 , 0x15 };  *)
        (* TC  OID_t ndpsAttMediaReadyGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x00 , 0x16 };  *)
        (* TC  OID_t ndpsAttInputTraysMediumGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x00 , 0x6B };  *)
        (* TC  OID_t ndpsAttPrinterIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttPrinterStateReasonsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x01 };  *)
        (* TC  OID_t ndpsAttPreviousPrinterStateGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x02 };  *)
        (* TC  OID_t ndpsAttJobPoolGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x03 };  *)
        (* TC  OID_t ndpsAttPdsExecAndParamsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x04 };  *)
        (* TC  OID_t ndpsAttPhExecAndParamsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x05 };  *)
        (* TC  OID_t ndpsAttPdsStateGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x06 };  *)
        (* TC  OID_t ndpsAttSchedulerExecNameGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x07 };  *)
        (* TC  OID_t ndpsAttSchedulerExecParamsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x08 };  *)
        (* TC  OID_t ndpsAttSchedulerReadyGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x0A };  *)
        (* TC  OID_t ndpsAttPrtDataPoolSizeLmtGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x0B };  *)
        (* TC  OID_t ndpsAttPrtRetainedSizeLmtGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x0C };  *)
        (* TC  OID_t ndpsAttFfSupportedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x02 , 0x02 , 0x0D };  *)
        (* TC  OID_t ndpsAttMediumIdentifierGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttMediumTypeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 , 0x00 , 0x03 };  *)
        (* TC  OID_t ndpsAttMediumSizeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 , 0x00 , 0x04 };  *)
        (* TC  OID_t ndpsAttMediumDimensionsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 , 0x00 , 0x05 };  *)
        (* TC  OID_t ndpsAttMediumColorGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 , 0x00 , 0x06 };  *)
        (* TC  OID_t ndpsAttMediumRealizationGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 , 0x00 , 0x0D };  *)
        (* TC  OID_t ndpsAttMediumFormPartsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x03 , 0x00 , 0x0F };  *)
        (* TC  OID_t ndpsAttFontIdentifierGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x04 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttTransferMethodIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x05 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttDeliveryMethodIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x06 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttAuxiliarySheetIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x07 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttFinishingIdentifierGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x08 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttOutputIdentifierGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x09 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttImpositionIdentifierGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0A , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttSchedulerIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0B , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttDocumentStateGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x14 };  *)
        (* TC  OID_t ndpsAttCopyCountGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x40 };  *)
        (* TC  OID_t ndpsAttTransferMethodGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x50 };  *)
        (* TC  OID_t ndpsAttDocumentSequenceNumGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x52 };  *)
        (* TC  OID_t ndpsAttDocumentContentGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x53 };  *)
        (* TC  OID_t ndpsAttDocumentTypeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x55 };  *)
        (* TC  OID_t ndpsAttNonCompulsoryAttrsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x58 };  *)
        (* TC  OID_t ndpsAttOctetCountGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x6A };  *)
        (* TC  OID_t ndpsAttPageCountGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0C , 0x00 , 0x6B };  *)
        (* TC  OID_t ndpsAttResourceNameGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0D , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttInputIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0E , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttInputLocationGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0E , 0x02 , 0x01 };  *)
        (* TC  OID_t ndpsAttOutputIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x0F , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttAuxiliarySheetPkgIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x10 , 0x00 , 0x00 };  *)
        (* TC  OID_t ndpsAttJobDefaultsIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x11 , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttPrinterLimitsIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x12 , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttManagerNameGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x13 , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttDocDefaultsIdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x18 , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttAlertNameGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x00 };  *)
        (* TC  OID_t ndpsAttAlertOtherGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x01 };  *)
        (* TC  OID_t ndpsAttAlertUnknownGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x02 };  *)
        (* TC  OID_t ndpsAttAlertCoverOpenGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x03 };  *)
        (* TC  OID_t ndpsAttAlertCoverClosedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x04 };  *)
        (* TC  OID_t ndpsAttAlertInterlockOpenGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x05 };  *)
        (* TC  OID_t ndpsAttAlertInterlockClosdGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x06 };  *)
        (* TC  OID_t ndpsAttAlertConfigChangeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x07 };  *)
        (* TC  OID_t ndpsAttAlertJamGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x08 };  *)
        (* TC  OID_t ndpsAttAlertJobReportGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x64 };  *)
        (* TC  OID_t ndpsAttAlertJobWarningGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x65 };  *)
        (* TC  OID_t ndpsAttAlertJobErrorGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x66 };  *)
        (* TC  OID_t ndpsAttAlertJobAbortGbl [ ] =  *)
        (* TC  { 0x06 , 0x0D , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x67 };  *)
        (* TC  OID_t ndpsAttCurrentJobStateGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x48 };  *)
        (* TC  OID_t ndpsAttPreviousJobStateGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x49 };  *)
        (* TC  OID_t ndpsAttSubmissionTimeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x4C };  *)
        (* TC  OID_t ndpsAttModificationTimeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x4D };  *)
        (* TC  OID_t ndpsAttStartedPrintingTimeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x4E };  *)
        (* TC  OID_t ndpsAttJobCopiesCompletedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x4F };  *)
        (* TC  OID_t ndpsAttPagesCompletedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x50 };  *)
        (* TC  OID_t ndpsAttOctetsCompletedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x51 };  *)
        (* TC  OID_t ndpsAttInterveningJobsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x54 };  *)
        (* TC  OID_t ndpsAttPrintCheckpointGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x55 };  *)
        (* TC  OID_t ndpsAttJobMsgFromAdminGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x58 };  *)
        (* TC  OID_t ndpsAttCompletionTimeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x61 };  *)
        (* TC  OID_t ndpsAttNumberOfDocumentsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x62 };  *)
        (* TC  OID_t ndpsAttIgnoredAttributesGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x63 };  *)
        (* TC  OID_t ndpsAttJobStateReasonsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x64 };  *)
        (* TC  OID_t ndpsAttTotalJobOctetsGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x01 , 0x00 , 0x81 , 0x65 };  *)
        (* TC  OID_t ndpsAttAlertDoorOpenGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x83 , 0x75 };  *)
        (* TC  OID_t ndpsAttAlertDoorClosedGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x83 , 0x76 };  *)
        (* TC  OID_t ndpsAttAlertPowerUpGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x83 , 0x77 };  *)
        (* TC  OID_t ndpsAttAlertPowerDownGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x83 , 0x78 };  *)
        (* TC  OID_t ndpsAttAlertInTrayMissingGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x21 };  *)
        (* TC  OID_t ndpsAttAlertInSizeChangeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x22 };  *)
        (* TC  OID_t ndpsAttAlertInWeightChgGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x23 };  *)
        (* TC  OID_t ndpsAttAlertInTypeChangeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x24 };  *)
        (* TC  OID_t ndpsAttAlertInColorChangeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x25 };  *)
        (* TC  OID_t ndpsAttAlertInPartsChangeGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x26 };  *)
        (* TC  OID_t ndpsAttAlertInSupplyLowGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x27 };  *)
        (* TC  OID_t ndpsAttAlertInSupplyEmptyGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x86 , 0x28 };  *)
        (* TC  OID_t ndpsAttAlertOutTrayMissngGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x87 , 0x05 };  *)
        (* TC  OID_t ndpsAttAlertOutTrayAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x87 , 0x06 };  *)
        (* TC  OID_t ndpsAttAlertOutTrayFullGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x87 , 0x07 };  *)
        (* TC  OID_t ndpsAttAlertFuserLoTempGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x87 , 0x69 };  *)
        (* TC  OID_t ndpsAttAlertFuserHiTempGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x87 , 0x6A };  *)
        (* TC  OID_t ndpsAttAlertTonerEmptyGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x4D };  *)
        (* TC  OID_t ndpsAttAlertInkEmptyGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x4E };  *)
        (* TC  OID_t ndpsAttAlertRibbonEmptyGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x4F };  *)
        (* TC  OID_t ndpsAttAlertTonerAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x50 };  *)
        (* TC  OID_t ndpsAttAlertInkAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x51 };  *)
        (* TC  OID_t ndpsAttAlertRibbonAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x52 };  *)
        (* TC  OID_t ndpsAttAlertWTonerAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x53 };  *)
        (* TC  OID_t ndpsAttAlertWInkAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x54 };  *)
        (* TC  OID_t ndpsAttAlertWTonerFullGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x55 };  *)
        (* TC  OID_t ndpsAttAlertWInkFullGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x56 };  *)
        (* TC  OID_t ndpsAttAlertOpcLifeAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x57 };  *)
        (* TC  OID_t ndpsAttAlertOpcLifeOverGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x58 };  *)
        (* TC  OID_t ndpsAttAlertDeveloprAlmostGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x59 };  *)
        (* TC  OID_t ndpsAttAlertDeveloprEmptyGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x88 , 0x5A };  *)
        (* TC  OID_t ndpsAttAlertMediaTrayMissGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8A , 0x15 };  *)
        (* TC  OID_t ndpsAttAlertMediaTrayAlmoGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8A , 0x16 };  *)
        (* TC  OID_t ndpsAttAlertMediaTrayFullGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8A , 0x17 };  *)
        (* TC  OID_t ndpsAttAlertInterpMemIncGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8B , 0x5D };  *)
        (* TC  OID_t ndpsAttAlertInterpMemDecGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8B , 0x5E };  *)
        (* TC  OID_t ndpsAttAlertInterpCartAddGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8B , 0x5F };  *)
        (* TC  OID_t ndpsAttAlertInterpCartDelGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8B , 0x60 };  *)
        (* TC  OID_t ndpsAttAlertInterpResAddGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8B , 0x61 };  *)
        (* TC  OID_t ndpsAttAlertInterpResDelGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8B , 0x62 };  *)
        (* TC  OID_t ndpsAttAlertInterpResUnGbl [ ] =  *)
        (* TC  { 0x06 , 0x0E , 0x60 , 0x86 , 0x48 , 0x01 , 0x86 , 0xF8 , 0x37 , 0x01 , 0x04 , 0x00 , 0x1C , 0x02 , 0x8B , 0x63 };  *)
    {$ELSE}
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
        (* TC extern C *)
    {$ENDIF}
{$ENDIF}

